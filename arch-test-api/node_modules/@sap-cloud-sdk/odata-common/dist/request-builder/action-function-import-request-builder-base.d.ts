import { DestinationOrFetchOptions } from '@sap-cloud-sdk/connectivity';
import { HttpResponse } from '@sap-cloud-sdk/http-client';
import { ODataRequestConfig } from '../request/odata-request-config';
import { BatchReference, WithBatchReference } from '../request';
import { MethodRequestBuilder } from './request-builder-base';
/**
 * Create OData request to execute a action or function import.
 * @typeParam ReturnT - Type of the function import return value.
 */
export declare abstract class ActionFunctionImportRequestBuilderBase<ReturnT, RequestConfigT extends ODataRequestConfig> extends MethodRequestBuilder<RequestConfigT> implements WithBatchReference {
    readonly responseTransformer: (data: any) => ReturnT;
    private _batchReference;
    /**
     * Base class for function  and actions imports.
     * @param responseTransformer - Transformation function for the response.
     * @param requestConfig - Request config for a action or function import.
     */
    protected constructor(responseTransformer: (data: any) => ReturnT, requestConfig: RequestConfigT);
    /**
     * Execute request.
     * @param destination - Destination or DestinationFetchOptions to execute the request against.
     * @param dataAccessor - A function to modify the received response data.
     * @returns A promise resolving to the requested return type.
     */
    execute(destination: DestinationOrFetchOptions, dataAccessor?: (data: any) => any): Promise<ReturnT>;
    /**
     * Execute request and return an {@link @sap-cloud-sdk/http-client!HttpResponse}.
     * @param destination - Destination or DestinationFetchOptions to execute the request against.
     * @returns A promise resolving to an {@link @sap-cloud-sdk/http-client!HttpResponse}.
     */
    executeRaw(destination: DestinationOrFetchOptions): Promise<HttpResponse>;
    /**
     * Gets identifier for the batch request.
     * @returns Batch request identifier.
     */
    getBatchReference(): BatchReference;
    /**
     * Sets user-defined identifier for the batch reference.
     * @param id - User-defined batch reuest identifier.
     */
    setBatchId(id: string): void;
}
//# sourceMappingURL=action-function-import-request-builder-base.d.ts.map