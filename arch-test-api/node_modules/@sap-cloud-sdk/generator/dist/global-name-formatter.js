"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
exports.GlobalNameFormatter = void 0;
const util_1 = require("@sap-cloud-sdk/util");
/**
 * @internal
 */
class GlobalNameFormatter {
    constructor(vdmMapping) {
        this.directoryNameGenerator = new util_1.UniqueNameGenerator('-');
        this.npmPackageNameGenerator = new util_1.UniqueNameGenerator('-');
        this.vdmMapping = vdmMapping || {};
        this.directoryNameGenerator.addToUsedNames(...Object.entries(this.vdmMapping).map(([, v]) => v.directoryName));
        this.npmPackageNameGenerator.addToUsedNames(...Object.entries(this.vdmMapping).map(([, v]) => v.npmPackageName));
    }
    uniqueDirectoryName(directoryName, originalFileName) {
        return (this.directoryNameFromMapping(originalFileName) ||
            this.transformAndCacheDirectoryName(directoryName));
    }
    uniqueNpmPackageName(npmPackageName, originalFileName) {
        return (this.npmPackageNameFromMapping(originalFileName) ||
            this.transformAndCacheNpmPackageName(npmPackageName));
    }
    transformAndCacheDirectoryName(directoryName) {
        return this.directoryNameGenerator.generateAndSaveUniqueName(directoryName);
    }
    transformAndCacheNpmPackageName(npmPackageName) {
        return this.npmPackageNameGenerator.generateAndSaveUniqueName(npmPackageName);
    }
    directoryNameFromMapping(originalFileName) {
        return this.fromMapping(originalFileName, 'directoryName');
    }
    npmPackageNameFromMapping(originalFileName) {
        return this.fromMapping(originalFileName, 'npmPackageName');
    }
    fromMapping(originalFileName, key) {
        return (0, util_1.propertyExists)(this.vdmMapping, originalFileName, key)
            ? this.vdmMapping[originalFileName][key]
            : undefined;
    }
}
exports.GlobalNameFormatter = GlobalNameFormatter;
//# sourceMappingURL=global-name-formatter.js.map