/**
 * @internal
 */
export declare class ServiceNameFormatter {
    static originalToServiceName(name: string): string;
    static directoryToSpeakingModuleName(packageName: string): string;
    private serviceWideNameGenerator;
    private parameterNameGenerators;
    private staticPropertyNameGenerators;
    private instancePropertyNameGenerators;
    constructor(entitySetNames?: string[], complexTypeNames?: string[], functionImportNames?: string[]);
    originalToStaticPropertyName(originalContainerTypeName: string, originalPropertyName: string): string;
    originalToInstancePropertyName(originalContainerTypeName: string, originalPropertyName: string): string;
    originalToOperationName(originalName: string): string;
    originalToBoundOperationName(entityName: string, functionName: string): string;
    originalToComplexTypeName(originalName: string): string;
    originalToEnumTypeName(originalName: string): string;
    originalToNavigationPropertyName(entitySetName: string, originalPropertyName: string): string;
    originalToParameterName(originalFunctionImportName: string, originalParameterName: string): string;
    originalToBoundParameterName(entityName: string, originalFunctionImportName: string, originalParameterName: string): string;
    originalToEntityClassName(entitySetName: string): string;
    private getOrInitGenerator;
}
/**
 * @internal
 */
export declare function stripCollection(name: string): string;
//# sourceMappingURL=service-name-formatter.d.ts.map