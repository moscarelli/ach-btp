import { ParsedGeneratorOptions } from './generator-options';
import { GlobalNameFormatter } from './global-name-formatter';
import { ServiceDefinitionPaths } from './input-path-provider';
import { VdmMapping } from './service-mapping';
import { VdmServiceMetadata } from './vdm-types';
/**
 * @param options - Generator options
 * @returns the parsed services
 * @internal
 */
export declare function parseAllServices(options: ParsedGeneratorOptions): VdmServiceMetadata[];
/**
 * @param serviceDefinitionPaths - Path to the service definition
 * @param options - Generator options
 * @param mappings - mappings for VDM service names to desired name
 * @param globalNameFormatter - Instance of global name formatter to be used for the parsing process
 * @returns the parsed service
 * @internal
 */
export declare function parseService(serviceDefinitionPaths: ServiceDefinitionPaths, options: ParsedGeneratorOptions, mappings: VdmMapping, globalNameFormatter: GlobalNameFormatter): VdmServiceMetadata;
/**
 * @internal
 */
export declare function getServiceName(service: VdmServiceMetadata): string;
//# sourceMappingURL=service-generator.d.ts.map